{"version":3,"names":["React","memo","useFPSMetric","View","Text","FPSLogger","props","fps","average","fpsCaptureEnabled","handleFPSData","toFixed","screenName","totalCount","renderFPS","createElement"],"sources":["FPSLogger.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { useFPSMetric } from \"../../utils/useFPSMetrics\";\nimport { View, Text } from \"react-native\";\n\ntype FPSLoggerProps = {\n  screenName: string;\n  totalCount: number;\n  fpsCaptureEnabled: boolean;\n  renderFPS?: boolean;\n  handleFPSData?: (\n    fps: number,\n    average: number,\n    screenName: string,\n    totalCount: number,\n    ...args: any[]\n  ) => void;\n};\n\nconst FPSLogger = (props: FPSLoggerProps) => {\n  const { fps, average } = useFPSMetric();\n  if (props.fpsCaptureEnabled && props?.handleFPSData) {\n    props.handleFPSData(+fps.toFixed(2), +average.toFixed(2), props.screenName, props.totalCount);\n  }\n  return props?.renderFPS ? (\n    <View>\n      <Text>{`FPS: ${fps.toFixed(2)}`}</Text>\n      <Text>{`Average FPS: ${average.toFixed(2)}`}</Text>\n    </View>\n  ) : null;\n};\nexport default memo(FPSLogger);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,IAAI,EAAEC,IAAI,QAAQ,cAAc;AAgBzC,MAAMC,SAAS,GAAIC,KAAqB,IAAK;EAC3C,MAAM;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAGN,YAAY,CAAC,CAAC;EACvC,IAAII,KAAK,CAACG,iBAAiB,IAAIH,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEI,aAAa,EAAE;IACnDJ,KAAK,CAACI,aAAa,CAAC,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAACH,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC,EAAEL,KAAK,CAACM,UAAU,EAAEN,KAAK,CAACO,UAAU,CAAC;EAC/F;EACA,OAAOP,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEQ,SAAS,gBACrBd,KAAA,CAAAe,aAAA,CAACZ,IAAI,qBACHH,KAAA,CAAAe,aAAA,CAACX,IAAI,QAAE,QAAQG,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,EAAS,CAAC,eACvCX,KAAA,CAAAe,aAAA,CAACX,IAAI,QAAE,gBAAgBI,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC,EAAS,CAC9C,CAAC,GACL,IAAI;AACV,CAAC;AACD,4BAAeV,IAAI,CAACI,SAAS,CAAC","ignoreList":[]}
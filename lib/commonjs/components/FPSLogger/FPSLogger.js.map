{"version":3,"names":["_react","_interopRequireWildcard","require","_useFPSMetrics","_reactNative","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","FPSLogger","props","fps","average","useFPSMetric","fpsCaptureEnabled","handleFPSData","toFixed","screenName","totalCount","renderFPS","createElement","View","Text","_default","exports","memo"],"sources":["FPSLogger.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { useFPSMetric } from \"../../utils/useFPSMetrics\";\nimport { View, Text } from \"react-native\";\n\ntype FPSLoggerProps = {\n  screenName: string;\n  totalCount: number;\n  fpsCaptureEnabled: boolean;\n  renderFPS?: boolean;\n  handleFPSData?: (\n    fps: number,\n    average: number,\n    screenName: string,\n    totalCount: number,\n    ...args: any[]\n  ) => void;\n};\n\nconst FPSLogger = (props: FPSLoggerProps) => {\n  const { fps, average } = useFPSMetric();\n  if (props.fpsCaptureEnabled && props?.handleFPSData) {\n    props.handleFPSData(+fps.toFixed(2), +average.toFixed(2), props.screenName, props.totalCount);\n  }\n  return props?.renderFPS ? (\n    <View>\n      <Text>{`FPS: ${fps.toFixed(2)}`}</Text>\n      <Text>{`Average FPS: ${average.toFixed(2)}`}</Text>\n    </View>\n  ) : null;\n};\nexport default memo(FPSLogger);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AAA0C,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAL,wBAAAK,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAgB1C,MAAMW,SAAS,GAAIC,KAAqB,IAAK;EAC3C,MAAM;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAG,IAAAC,2BAAY,EAAC,CAAC;EACvC,IAAIH,KAAK,CAACI,iBAAiB,IAAIJ,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEK,aAAa,EAAE;IACnDL,KAAK,CAACK,aAAa,CAAC,CAACJ,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC,EAAE,CAACJ,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC,EAAEN,KAAK,CAACO,UAAU,EAAEP,KAAK,CAACQ,UAAU,CAAC;EAC/F;EACA,OAAOR,KAAK,aAALA,KAAK,eAALA,KAAK,CAAES,SAAS,gBACrBnC,MAAA,CAAAW,OAAA,CAAAyB,aAAA,CAAChC,YAAA,CAAAiC,IAAI,qBACHrC,MAAA,CAAAW,OAAA,CAAAyB,aAAA,CAAChC,YAAA,CAAAkC,IAAI,QAAE,QAAQX,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC,EAAS,CAAC,eACvChC,MAAA,CAAAW,OAAA,CAAAyB,aAAA,CAAChC,YAAA,CAAAkC,IAAI,QAAE,gBAAgBV,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC,EAAS,CAC9C,CAAC,GACL,IAAI;AACV,CAAC;AAAC,IAAAO,QAAA,GAAAC,OAAA,CAAA7B,OAAA,gBACa,IAAA8B,WAAI,EAAChB,SAAS,CAAC","ignoreList":[]}
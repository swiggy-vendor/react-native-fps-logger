{"version":3,"names":["_react","require","useFPSMetric","frameState","setFrameState","useState","fps","lastStamp","Date","now","framesCount","average","totalCount","lowestFps","useEffect","timeout","requestAnimationFrame","setTimeout","currentStamp","shouldSetState","newFramesCount","newValue","newMean","Math","min","clearTimeout","resetLowFpsFn","resetLowFps"],"sources":["useFPSMetrics.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype FrameData = {\n  fps: number;\n  lastStamp: number;\n  framesCount: number;\n  average: number;\n  totalCount: number;\n  lowestFps: number;\n};\nexport type FPS = { average: FrameData[\"average\"]; fps: FrameData[\"fps\"] };\n\nexport function useFPSMetric(): {\n  average: number;\n  fps: number;\n  lowestFps: number;\n  resetLowFps: Function;\n  lastStamp: number;\n} {\n  const [frameState, setFrameState] = useState<FrameData>({\n    fps: 0,\n    lastStamp: Date.now(),\n    framesCount: 0,\n    average: 0,\n    totalCount: 0,\n    lowestFps: 240,\n  });\n\n  useEffect(() => {\n    // NOTE: timeout is here\n    // because requestAnimationFrame is deferred\n    // and to prevent setStates when unmounted\n    let timeout: NodeJS.Timeout | null = null;\n\n    requestAnimationFrame((): void => {\n      timeout = setTimeout((): void => {\n        const currentStamp = Date.now();\n        const shouldSetState = currentStamp - frameState.lastStamp > 1000;\n        const newFramesCount = frameState.framesCount + 1;\n        // updates fps at most once per second\n        if (shouldSetState) {\n          const newValue = frameState.framesCount;\n          const totalCount = frameState.totalCount + 1;\n          // I use math.min here because values over 60 aren't really important\n          // I calculate the mean fps incrementally here instead of storing all the values\n          const newMean = Math.min(\n            frameState.average + (newValue - frameState.average) / totalCount,\n            60\n          );\n          setFrameState({\n            fps: frameState.framesCount,\n            lastStamp: currentStamp,\n            framesCount: 0,\n            average: newMean,\n            totalCount,\n            lowestFps: Math.min(frameState.lowestFps, frameState.framesCount),\n          });\n        } else {\n          setFrameState({\n            ...frameState,\n            framesCount: newFramesCount,\n          });\n        }\n      }, 0);\n    });\n    return () => {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [frameState]);\n\n  const resetLowFpsFn = () => {\n    setFrameState({\n      ...frameState,\n      lowestFps: 240,\n    });\n  };\n\n  return {\n    average: frameState.average,\n    fps: frameState.fps,\n    lowestFps: frameState.lowestFps,\n    resetLowFps: resetLowFpsFn,\n    lastStamp: frameState.lastStamp,\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAYO,SAASC,YAAYA,CAAA,EAM1B;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG,IAAAC,eAAQ,EAAY;IACtDC,GAAG,EAAE,CAAC;IACNC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrBC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE,CAAC;IACVC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,IAAAC,gBAAS,EAAC,MAAM;IACd;IACA;IACA;IACA,IAAIC,OAA8B,GAAG,IAAI;IAEzCC,qBAAqB,CAAC,MAAY;MAChCD,OAAO,GAAGE,UAAU,CAAC,MAAY;QAC/B,MAAMC,YAAY,GAAGV,IAAI,CAACC,GAAG,CAAC,CAAC;QAC/B,MAAMU,cAAc,GAAGD,YAAY,GAAGf,UAAU,CAACI,SAAS,GAAG,IAAI;QACjE,MAAMa,cAAc,GAAGjB,UAAU,CAACO,WAAW,GAAG,CAAC;QACjD;QACA,IAAIS,cAAc,EAAE;UAClB,MAAME,QAAQ,GAAGlB,UAAU,CAACO,WAAW;UACvC,MAAME,UAAU,GAAGT,UAAU,CAACS,UAAU,GAAG,CAAC;UAC5C;UACA;UACA,MAAMU,OAAO,GAAGC,IAAI,CAACC,GAAG,CACtBrB,UAAU,CAACQ,OAAO,GAAG,CAACU,QAAQ,GAAGlB,UAAU,CAACQ,OAAO,IAAIC,UAAU,EACjE,EACF,CAAC;UACDR,aAAa,CAAC;YACZE,GAAG,EAAEH,UAAU,CAACO,WAAW;YAC3BH,SAAS,EAAEW,YAAY;YACvBR,WAAW,EAAE,CAAC;YACdC,OAAO,EAAEW,OAAO;YAChBV,UAAU;YACVC,SAAS,EAAEU,IAAI,CAACC,GAAG,CAACrB,UAAU,CAACU,SAAS,EAAEV,UAAU,CAACO,WAAW;UAClE,CAAC,CAAC;QACJ,CAAC,MAAM;UACLN,aAAa,CAAC;YACZ,GAAGD,UAAU;YACbO,WAAW,EAAEU;UACf,CAAC,CAAC;QACJ;MACF,CAAC,EAAE,CAAC,CAAC;IACP,CAAC,CAAC;IACF,OAAO,MAAM;MACX,IAAIL,OAAO,EAAEU,YAAY,CAACV,OAAO,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACZ,UAAU,CAAC,CAAC;EAEhB,MAAMuB,aAAa,GAAGA,CAAA,KAAM;IAC1BtB,aAAa,CAAC;MACZ,GAAGD,UAAU;MACbU,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IACLF,OAAO,EAAER,UAAU,CAACQ,OAAO;IAC3BL,GAAG,EAAEH,UAAU,CAACG,GAAG;IACnBO,SAAS,EAAEV,UAAU,CAACU,SAAS;IAC/Bc,WAAW,EAAED,aAAa;IAC1BnB,SAAS,EAAEJ,UAAU,CAACI;EACxB,CAAC;AACH","ignoreList":[]}